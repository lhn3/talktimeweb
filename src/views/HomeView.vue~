<template>
  <div :class="$style['home']">
    <!--背景-->
    <!--    <particle-bg />-->
    <bridge-bg />

    <!--聊天窗口-->
    <div class="home-container">
      <!--左侧头像信息分组一列-->
      <group-settings-column v-model="state.group" />

      <!--中间人员，公众号，群等列表列-->
      <list-column
        :group="state.group"
        :user-id="state.userId"
        :group-info-list="groupInfoList"
        :chatting-id="state.chattingId"
        @change-chatting-id="id => (state.chattingId = id)"
        @change-user-id="id => (state.userId = id)"
      />

      <!--聊天框-->
      <chatting-column :message-or-user-info="messageOrUserInfo" :chatting-id="state.chattingId" :group="state.group" />

      <!--群聊或个人信息（可隐藏）-->
      <information-column />
    </div>
  </div>
</template>
<script setup lang="ts">
  import ParticleBg from '@/components/particle-bg/particle-bg.vue'
  import BridgeBg from '@/components/bridge-bg/index.vue'
  import GroupSettingsColumn from '@/views/components/group-settings-column/index.vue'
  import ListColumn from '@/views/components/list-column/index.vue'
  import ChattingColumn from '@/views/components/chatting-column/index.vue'
  import InformationColumn from '@/views/components/information-column/index.vue'
  import { useUserStore } from '@/stores'
  import { computed, reactive } from 'vue'

  const user = useUserStore()
  const state = reactive({
    group: 0, //当前组，0聊天，1好友，2群聊

    chattingId: 1, //当前聊天的id
    userId: 0 //当前好友的id
  })

  //当前的分组的信息
  const groupInfoList = computed(() => {
    if (state.group === 0) {
      // 当前聊天的列表人员
      return user.userInfo.messageBox
    } else if (state.group === 1) {
      // 好友列表人员
      return user.userInfo.friendList
    } else {
      return []
    }
  })

  //当前的消息列表和当前用户的信息
  const messageOrUserInfo = computed(() => {
    if (state.group === 0) {
      // 获取选中的正在聊天的信息和消息列表
      return user.userInfo.messageBox?.find((item: any) => item.id === state.chattingId)
    } else if (state.group === 1) {
      // 获取不同首字母下当前选中的用户信息
      let info = {}
      user.userInfo.friendList?.find((item: any) => {
        let r = item.list?.find((i: any) => i.id === state.userId)
        if (r) {
          info = r
          return true
        }
      })
      return info
    } else {
      return {}
    }
  })
</script>
<style module lang="scss">
  .home {
    height: 100%;
    width: 100%;
    //background: url('../assets/img/login_bg.webp') no-repeat;
    //background: radial-gradient(circle at 60% 90%, rgba(#b48dfd, 1), transparent 60%),
    //  radial-gradient(circle at 20px 20px, rgba(#b48dfd, 0.8), transparent 25%), #637ecf;
    //background-size: cover;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    overflow: scroll;
    :global {
      .home-container {
        opacity: 0.97;
        z-index: 999;
        box-shadow: -5px 5px 10px 3px rgba(#000, 0.5);
        height: 85vh;
        min-height: 500px;
        border-radius: 16px;
        overflow: hidden;
        display: flex;
      }
    }
  }
</style>
